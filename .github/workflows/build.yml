name: Build, Push to ECR, and Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build with Maven
        run: mvn clean package -DskipTests
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: my-springboot-app
          IMAGE_TAG: awsweek5project
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      - name: Create new Task Definition
        run: |
          # Get the current task definition
          aws ecs describe-task-definition \
            --task-definition my-springboot-app \
            --region us-east-1 > task-def.json
          # Update the image in the task definition
          jq '.taskDefinition | .containerDefinitions[0].image = "${{ steps.login-ecr.outputs.registry }}/my-springboot-app:${{ github.sha }}"' task-def.json > updated-task-def.json
          # Register the new task definition
          aws ecs register-task-definition \
            --family my-springboot-app \
            --cli-input-json file://updated-task-def.json \
            --region us-east-1 > new-task-def.json
          # Get the new task definition ARN
          echo "TASK_DEF_ARN=$(jq -r '.taskDefinition.taskDefinitionArn' new-task-def.json)" >> $GITHUB_ENV
      - name: Create AppSpec File
        run: |
          cat << EOF > appspec.yaml
          version: 0.0
          Resources:
            - TargetService:
                Type: AWS::ECS::Service
                Properties:
                  TaskDefinition: "${{ env.TASK_DEF_ARN }}"
                  LoadBalancerInfo:
                    ContainerName: "springboot-app"
                    ContainerPort: 8080
          EOF
      - name: Deploy to CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name MySpringBootApp \
            --deployment-group-name MyDeploymentGroup \
            --deployment-config-name CodeDeployDefault.ECSAllAtOnce \
            --revision revisionType=AppSpecContent,appSpecContent='$(cat appspec.yaml)' \
            --region us-east-1